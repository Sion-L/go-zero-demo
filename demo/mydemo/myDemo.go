// Code generated by goctl. DO NOT EDIT.
// Source: demo.proto

package mydemo

import (
	"context"

	"github.com/Sion-L/go-zero-demo/demo/demo"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DemoReq = demo.DemoReq
	DemoRes = demo.DemoRes

	MyDemo interface {
		Demo(ctx context.Context, in *DemoReq, opts ...grpc.CallOption) (*DemoRes, error)
	}

	defaultMyDemo struct {
		cli zrpc.Client
	}
)

func NewMyDemo(cli zrpc.Client) MyDemo {
	return &defaultMyDemo{
		cli: cli,
	}
}

func (m *defaultMyDemo) Demo(ctx context.Context, in *DemoReq, opts ...grpc.CallOption) (*DemoRes, error) {
	client := demo.NewMyDemoClient(m.cli.Conn())
	return client.Demo(ctx, in, opts...)
}
